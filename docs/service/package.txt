PACKAGE DOCUMENTATION

package service
    import "github.com/materials-commons/mcfs/service"



TYPES

type Dirs interface {
    ByID(id string) (*schema.DataDir, error)
    Update(*schema.DataDir) error
    Insert(*schema.DataDir) (*schema.DataFile, error)
    AddFiles(dir *schema.DataDir, fileIDs ...string) error
}
    Dirs is the common API to directories.



type Files interface {
    ByID(id string) (*schema.DataFile, error)
    Update(*schema.DataFile) error
    Insert(*schema.DataFile) (*schema.DataFile, error)
    AddDirectories(file *schema.DataFile, dirIDs ...string) error
}
    Files is the common API to files.



type ServiceDatabase int
    ServiceDatabase specifies the type of database backend the service uses.

const (
    // RethinkDB database backend
    RethinkDB ServiceDatabase = iota

    // SQL represents a generic SQL database backend
    SQL
)



type Users interface {
    ByID(id string) (*schema.User, error)
    ByAPIKey(apikey string) (*schema.User, error)
    All() ([]schema.User, error)
}
    Users is the common API to users.


func NewUsers(serviceDatabase ServiceDatabase) Users
    NewUsers creates a new Users instance connecting to a specific database
    backend.




