PACKAGE DOCUMENTATION

package servers
    import "github.com/materials-commons/mcfs/server/servers"



FUNCTIONS

func Start()
    Start starts all server instances.

func StartNamed(serverNames ...string)
    StartNamed starts the named server instances.

func Stop()
    Stop stops all server instances.

func StopNamed(serverNames ...string)
    StopNamed stops the named server instances.


TYPES

type Instance interface {
    // Run runs the server, passing in the channel it should listen on for
    // stop command.
    Run(stopChan <-chan struct{})

    // Init initializes server resources. In particular this will be called everytime
    // a server is started. It should re-initialize all server state.
    Init()
}
    Instance is an instance of a server that is being monitored. A server
    implementing this interface must be restartable.



type Server struct {
    tomb.Tomb
    Instance
    // contains filtered or unexported fields
}
    Server is an instance of server that can be started, stopped and queried
    for status. A server is a go routine.


func (s *Server) Start()
    Start starts a server instance. It handles marking a server as done when
    it has finished running.

func (s *Server) Status() Status
    Status returns the current status of the server.

func (s *Server) Stop()
    Stop stops a server instance.


type Status int
    Status the status of a server

const (
    // Running server is still alive and responding to requests
    Running Status = iota

    // Stopping server is shutting down
    Stopping

    // Stopped server is no longer running
    Stopped
)


func (s Status) String() string



SUBDIRECTORIES

	access
	recover
	tlog

